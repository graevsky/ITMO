<?xml version="1.0" encoding="UTF-8"?>
<project name="OPI" default="report" basedir=".">
    <property file="ant.properties"/>

    <path id="project.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${test.results.dir}"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="build" depends="compile">
        <war destfile="${dist.dir}/OPI3-${version}.war" webxml="${webapp.dir}/WEB-INF/web.xml">
            <fileset dir="${webapp.dir}" excludes="WEB-INF/**"/>
            <lib dir="${lib.dir}">
                <exclude name="${war.excludes}"/>
            </lib>
            <classes dir="${build.dir}"/>
            <webinf dir="${webapp.dir}/WEB-INF">
                <include name="${file.pattern.xml"/>
                <include name="${file.pattern.xhtml"/>
                <include name="${file.pattern.js"/>
                <include name="${file.pattern.css}"/>
            </webinf>
            <fileset dir="src/main/resources" includes="${file.pattern.persistence}"/>
        </war>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="xml">
        <xmlvalidate failonerror="true" lenient="true">
            <fileset dir="${basedir}/src" includes="${file.pattern.xml}"/>
        </xmlvalidate>
    </target>

    <target name="compile-tests" depends="compile">
        <javac srcdir="${test.src.dir}" destdir="${build.dir}/test" includeantruntime="false">
            <classpath>
                <path refid="project.classpath"/>
                <pathelement path="${build.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="project.classpath"/>
                <pathelement path="${build.dir}/test"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.results.dir}">
                <fileset dir="${build.dir}/test" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="report" depends="test">
        <exec executable="git" dir=".">
            <arg value="${git.add.command}"/>
            <arg value="${git.add.command.options}"/>
            <arg value="${test.results.dir}/"/>
        </exec>
        <exec executable="git" dir=".">
            <arg value="${git.commit.command}"/>
            <arg value="${git.commit.command.options}"/>
            <arg value="${git.commit.message}"/>
        </exec>
    </target>

    <target name="xml-to-html" depends="test">
        <mkdir dir="${test.html.dir}"/>
        <xslt basedir="${test.results.dir}" destdir="${test.html.dir}" style="src/test/resources/junit-report.xsl"
              extension=".html">
            <fileset dir="${test.results.dir}" includes="${file.pattern.xml}"/>
            <mapper type="glob" from="*.xml" to="*.html"/>
        </xslt>
    </target>
</project>
