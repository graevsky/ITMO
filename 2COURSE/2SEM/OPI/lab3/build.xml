<?xml version="1.0" encoding="UTF-8"?>
<project name="OPI" default="report" basedir=".">
    <property file="ant.properties"/>

    <path id="test.classpath">
        <pathelement path="${build.dir}"/>
        <pathelement path="${build.dir}/test"/>
        <pathelement path="${lib.dir}/${junit.jar}"/>
        <pathelement path="${lib.dir}/${hamcrest.jar}"/>
    </path>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${test.results.dir}"/>
    </target>

    <target name="compile" depends="init">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath>
                <pathelement path="${lib.dir}/${javax.faces-api.jar}"/>
                <pathelement path="${lib.dir}/${primefaces.jar}"/>
                <pathelement path="${lib.dir}/${javaee-api.jar}"/>
                <pathelement path="${lib.dir}/${eclipselink.jar}"/>
                <pathelement path="${lib.dir}/${postgresql.jar}"/>
            </classpath>
        </javac>
    </target>

    <target name="build" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/OPI3-${version}.jar" basedir="${build.dir}" manifest="${webapp.dir}/WEB-INF/MANIFEST.MF">
            <fileset dir="${webapp.dir}" includes="${file.pattern.xhtml}"/>
            <fileset dir="${webapp.dir}" includes="${file.pattern.js}"/>
            <fileset dir="${webapp.dir}" includes="${file.pattern.css}"/>
            <fileset dir="${webapp.dir}" includes="${file.pattern.xml}"/>
        </jar>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="xml">
        <xmlvalidate failonerror="true" lenient="true">
            <fileset dir="${basedir}/src" includes="${file.pattern.xml}"/>
        </xmlvalidate>
    </target>

    <target name="compile-tests" depends="compile">
        <mkdir dir="${build.dir}/test"/>
        <javac srcdir="${test.src.dir}" destdir="${build.dir}/test" includeantruntime="false">
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath refid="test.classpath"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.results.dir}">
                <fileset dir="${build.dir}/test" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="report" depends="test">
        <exec executable="git" dir=".">
            <arg value="${git.add.command}"/>
            <arg value="${git.add.command.options}"/>
            <arg value="${test.results.dir}/"/>
        </exec>
        <exec executable="git" dir=".">
            <arg value="${git.commit.command}"/>
            <arg value="${git.commit.command.options}"/>
            <arg value="${git.commit.message}"/>
        </exec>
    </target>

    <target name="xml-to-html" depends="test">
        <mkdir dir="${test.html.dir}"/>
        <xslt basedir="${test.results.dir}" destdir="${test.html.dir}" style="src/test/resources/junit-report.xsl" extension=".html">
            <fileset dir="${test.results.dir}" includes="**/*.xml"/>
            <mapper type="glob" from="*.xml" to="*.html"/>
        </xslt>
    </target>
</project>
