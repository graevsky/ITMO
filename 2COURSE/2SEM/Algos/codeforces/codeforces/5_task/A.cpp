// Система должна работать по следующему принципу. Каждый раз, когда новый
// пользователь хочет зарегистрироваться, он посылает системе запрос name со
// своим именем. Если данное имя не содержится в базе данных системы, то оно
// заносится туда и пользователю возвращается ответ OK, подтверждающий успешную
// регистрацию. Если же на сайте уже присутствует пользователь с именем name, то
// система формирует новое имя и выдает его пользователю в качестве подсказки,
// при этом подсказка также добавляется в базу данных. Новое имя формируется по
// следующему правилу. К name последовательно приписываются числа, начиная с
// единицы (name1, name2, ...), и среди них находят такое наименьшее i, что
// namei не содержится в базе данных сайта.

// Входные данные
// В первой строке входных данных задано число n (1 <= n <= 10^5). Следующие n
// строк содержат запросы к системе. Каждый запрос представляет собой непустую
// строку длиной не более 32 символов, состоящую только из строчных букв
// латинского алфавита.

// Выходные данные
// В выходных данных должно содержаться n строк — ответы системы на запросы: ОК
// в случае успешной регистрации, или подсказку с новым именем, если
// запрашиваемое уже занято.

#include <bits/stdc++.h>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

int main() {
  int n;
  cin >> n;
  map<string, int> names;

  string name;
  for (int i = 0; i < n; i++) {
    cin >> name;
    if (names.count(name) == 0) {
      names[name] = 1;
      cout << "OK" << endl;
    } else {
      string new_name;
      int count = names[name];
      while (true) {
        new_name = name + to_string(count);
        if (names[new_name] == 0) {
          break;
        }
        count++;
      }

      names[new_name] = 1;
      names[name] = count + 1;
      cout << new_name << endl;
    }
  }

  return 0;
}
