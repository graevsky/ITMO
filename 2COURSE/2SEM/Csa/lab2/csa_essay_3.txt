CSA ESSAY 3 https://www.youtube.com/watch?v=8Ab3ArE8W3s
•  Размер эссе -- 1024-4096 символов. 
•  Форма эссе -- свободная. Содержание эссе: 
•	1/3 краткое изложение основных идей материала;
•	1/3 ваша личная оценка основных идей материала (их полезность, актуальность, достоверность);
•	1/3 ваши рассуждения/мнение на поднятую в материале проблему/тему.


краткое изложение основных идей материала

Всегда в нашем мире существовали различные способы программирования. Сначала были перфокарты, потом терминалы, теперь мы можем создавать программы с удобством в специальных средах разработки. Однако это не значит, что такой подход является правильным или комфортным. 
Джек Рашер в своем докладе размышляет на тему того, что зачастую программисты вместо решения реальных проблем создают свои собственные и с трудом решают их. На протяжении свое рассказа автор рассматривает различные аспекты разработки: долгие и неудобные процессы сборки, сложность казалось бы простых программ, их представление, а так же процесс дебаггинга. Значительная часть доклада так же уходит на личные рассуждения Джека Рашера и на его личное виденье будущего программирования.


ваша личная оценка основных идей материала (их полезность, актуальность, достоверность)

На мой личный взгляд, проблемы, которые упомянул Джек Рассел во многом актуальны, хоть я и не согласен со всем, о чем говорит докладчик. По моему мнению, основная проблема, отсутствие представления и визуализации программ графическим образом не всегда имеет место. Например, какая-нибудь схема (без доступа к коду) для сложной программы-посредника не всегда сможет отразить ее суть и принцип работы. Но в то же время, удобно форматированный код, различные помощники (в том числе и графические), правильно подобранный язык смогут значительно упростить создание различных программ.   


ваши рассуждения/мнение на поднятую в материале проблему/тему

Мне кажется, создание программ, как и любой другой процесс создания чего-либо несет в себе огромное количество тонкостей. Когда мы выбираем, как, что и с помощью чего мы будем реализовывать, программист обязан брать все эти детали в расчет. Различные правильно подобранные инструменты для дебаггинга и представления программ хоть и не должны быть единственным способом представления информации, способны значительно улучшить качество готового продукта. Программистам нужно стремиться решать именно поставленную проблемы максимально просто, не придумывая при этом сложных проблем, а потом героически их решая.