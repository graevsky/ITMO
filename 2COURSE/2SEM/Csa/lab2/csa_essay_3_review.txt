Тема - "Stop Writing Dead Programs" by Jack Rusher (Strange Loop 2022)
# Эссе 1
В докладе “Перестаньте писать мёртвые программы” Джек Рашер обсуждает различные языки программирования, их особенности, преимущества и недостатки. Он  рассказывает о своём опыте работы с перфокартами, показывает, как подход к программированию может влиять на сложность и эффективность кода. Джек Рашер утверждает, что выбор языка программирования должен быть основан на его возможностях и удобстве использования, в качестве примера он приводит язык Haskell. Он обсуждает различные инструменты и технологии, такие как отладчики, визуализации и интерактивные среды, которые помогают в процессе разработки.

Мне показалась интересной идея интерактивного программирования, так как она позволяет разработчику мгновенно видеть результаты своего кода и быстро вносить изменения. Также интерактивное программирование обеспечивает возможность пошагового выполнения кода, что упрощает процесс отладки. Оно может быть полезно не только при прототипировании и отладке, но и при обучении, разработке интерфейсов и работе с большими объёмами данных. Также хотелось бы отметить, что “Гест” Айвена Риза выглядит очень залипательно. Анимация помогает визуализировать процесс и делает его более интерактивным и увлекательным для зрителя.

Автор утверждает, что подход, основанный на использовании статичных артефактов, привел к тому, что программисты сосредоточились на алгебраических задачах и доказательстве теорем, а не на взаимодействии с окружающей средой. Он призывает к переходу на интерактивное программирование. Я разделяю мнение автора, переход на интерактивное программирование может дать возможность разработчикам быстрее прототипировать, тестировать и оптимизировать свой код, что способствует более эффективной разработке программного обеспечения, а также позволит создавать более интерактивные и адаптивные приложения, отвечающие потребностям пользователей.
-------------------------
Ревью
Место 2 
Мне кажется, автор перечислил основные идеи доклада Джека Рашера. Были перечислены интсрументы и технологии из доклада, ацентировано внимание на выборе языка программировани. Оценка материалов аргументирована, отмечены иде касательно отладки и пошагового выполнения кода и удобству таких подходов. Личное мнение мне показалось немного недоработанным. Оно почему то выглядит, как повторение идей Джека Рашера. В целом, эссе получилось довольно компакнтым (спасибо за это...), но оно в достаточной, по моему мнению, мере формулирует идеи автора, а так же их оценку. Возмодно, стоило немного раскрыть тему интерактивного программирования. 


# Эссе 2
В представленной лекции поднимается ряд важных вопросов, связанных с выбором языка программирования, методами отладки программного обеспечения и перспективами развития средств программирования. Автор обращается к идеям интерактивного программирования и рассматривает его преимущества по сравнению с традиционным методом пакетной обработки кода. Он также обсуждает проблемы типизации, статического анализа и методов обработки ошибок в различных языках программирования.

Основные идеи материала можно свести к нескольким пунктам. Во-первых, автор подчеркивает, что выбор языка программирования должен быть обоснован функциональностью и удобством разработки, а не приверженностью каким-то конкретным технологиям. Он предлагает взглянуть на языки типа Lisp и Smalltalk, которые предоставляют широкие возможности интерактивной разработки и отладки.

Во-вторых, автор высказывает критику в адрес некоторых современных языков программирования, таких как C++ и Rust, обвиняя их в избыточности и сложности, а также в отсутствии удобных средств интерактивной разработки. Он призывает разработчиков к созданию средств, которые сочетают быстродействие компиляции с возможностью интерактивной отладки.

Лично я считаю, что предложенные идеи имеют высокую полезность и актуальность. Современная разработка программного обеспечения требует более эффективных инструментов, способных упростить процесс разработки и сделать его более гибким. Время, когда программисты могли позволить себе тратить часы на ожидание компиляции и отладки, давно прошло. Теперь требуется быстрая обратная связь и возможность изменять код в реальном времени.

Тема интерактивного программирования и средств разработки, позволяющих взаимодействовать с кодом в реальном времени, представляется мне важной и перспективной. Применение таких подходов может значительно повысить эффективность разработки программного обеспечения и сократить время, затрачиваемое на отладку и тестирование. Более того, это может способствовать развитию более интуитивных и удобных средств программирования, что в свою очередь приведет к повышению производительности и качества создаваемого программного обеспечения.
-------------------------
Ревью
Место 1
Автор эссе хорошо выделил основные идеи доклада, хоть они и немного напоминают перечисление. Оценка материалов показалась мне полной, хорошо сформулированной. Личное мнение автора так же хорошо выражено и подкреплено: аргументы звучат убедительно. В целом эссе мне понравилось, хоть возможно и стоило слегка доработать изложение основых идей.



# Эссе 3

Лично мне довольно трудно поддался этот доклад для понимания. Автор видео затронул много тем за 40 минут, но мне не удалось их все привязать к заголовку видео. В своем эссе разберу темы, о которых повествовал докладчик и поделюсь своими комментариями.

Джек Рашер рассказал про свое детство, как он программировал симуляцию космоса для NASA. Честно говоря, для меня это было новая информация и даже удивился от услышанного. То есть для каждой строки кода была своя бумажная карточка и вся программа собиралась стопками из этих карточек. Было невероятно много проблем: что если карточки перемешаются или где-то обнаружится баг/опечатка. Как найти среди такой стопки карточек нужную строку? Поразительно, как эволюционировало программирование!

Далее докладчик показал нам, как можно написать одну и ту же программу на разных уже устаревших языках. Сначала был ассемблер, у которого код занял аж 3 слайда! А победил APL, у которого вся программа была написана из 11 символов! Действительно поражает.

Затем нас посвятили в то, как же на самом деле выглядел самый первый терминал. Оказывается это было отдельное устройство, похожее на обычный компьютер. Еще рассказали почему в терминале определенные символы означают именно такой существующий смысл (например, связь ~ и домашней директории).

После этого автор начал рассказывать довольно банальные вещи. Что текстовые сообщения очень полезны и мы все их используем каждый день, но также не стоит забывать про визуализацию, например, про графики и картинки. Как аргумент послужили сложная информация, которую трудно объяснить текстом, но легко отобразить на графике или схеме.

Дальше была тема дебага, какие интересные инструменты есть для этого, потом докладчик дал свои комментарии о популярных языках и под конец показал какие-то старые бредовые языки программирования, которые сейчас совсем потеряли свою аудиторию и остались забытыми.

Понимаю, что все что выше - это просто краткий пересказ видео, через призму моего восприятия. Но мне не удалось все это объединить в заголовок "Перестаньте писать мертвые программы". Рашер хотел рассказать историческую справку и продемонстрировать устаревшие инструменты и языки программирования? Вроде нет, иначе Джек не высказывался хвалебно об этих языках и не рассказывал бы недостатки в современных языках. Может автор хотел продемонстрировать проблемы, из-за которых он считает, что написанные программы мертвые? Ну тоже нет, я не услышал таковых проблем и в целом тогда не понял термин "мертвые программы".

Подводя итог, я воспринял этот доклад как просто повествование "немного обо всем". Что-то полезного и практического я из видео не вынес, может быть расширил свой кругозор.

Как альтернатива данному докладу я предлагаю вам посмотреть видео по моей рекомендации (https://clck.ru/3ATmLD). Думаю, что многие из вас читали, либо просто наслышаны о книге "Чистый код". Так вот, в видео рассказывается о конфликте двух противоположных взглядов. Оказывается, если следовать правилам чистого кода, то ваш код будет медленне почти в 15 раз. Только представьте себе! Поэтому рекомендую к ознакомлению.-------------------------
Ревью
Место 3
Как мне показалось, тут была "склеено" изложение идей и их оценка. Вышло не очень... Изложение основных идей выглядит очень пышно и развернуто, а вот их оценка подкачала. Она больше мне напомнила тезисную реакцию на фрагменты видео. Но мнение автора в целом хорошо сформулировано, но как будто ему чего то не хватает (это лично мое мнение). В целом, выражение идей Джека Рашера и личное мнение получились нормально, а вот оценка идей подкачала :c
